// Copyright (c) 2017 The Authors of 'JWTS for NODE'
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/*jshint node:true */
'use strict';

var bufferEq = require('./index');
var assert = require('assert');

describe('buffer-equal-constant-time', function() {
  var a = new Buffer('asdfasdf123456');
  var b = new Buffer('asdfasdf123456');
  var c = new Buffer('asdfasdf');

  describe('bufferEq', function() {
    it('says a == b', function() {
      assert.strictEqual(bufferEq(a, b), true);
    });

    it('says a != c', function() {
      assert.strictEqual(bufferEq(a, c), false);
    });
  });

  describe('install/restore', function() {
    before(function() {
      bufferEq.install();
    });
    after(function() {
      bufferEq.restore();
    });

    it('installed an .equal method', function() {
      var SlowBuffer = require('buffer').SlowBuffer;
      assert.ok(Buffer.prototype.equal);
      assert.ok(SlowBuffer.prototype.equal);
    });

    it('infected existing Buffers', function() {
      assert.strictEqual(a.equal(b), true);
      assert.strictEqual(a.equal(c), false);
    });
  });

});
