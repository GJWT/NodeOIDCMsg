// Copyright (c) 2017 The Authors of 'JWTS for NODE'
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var getShrinkwrapDependencies = function (shrinkwrap, cb) {

  var results = {};

  var _parseModule = function (module, path, name) {

    var moduleName = (name || module.name) + '@' + module.version;
    if (results[moduleName]) {
      results[moduleName].paths.push(path.concat([moduleName]));
    }
    else {
      results[moduleName] = {
        name: name || module.name,
        version: module.version,
        paths: [path.concat([moduleName])]
      };
    }

    var children = Object.keys(module.dependencies || {});
    for (var i = 0, il = children.length; i < il; ++i) {
      var child = children[i];
      _parseModule(module.dependencies[child], path.concat([moduleName]), child);
    }
  };

  _parseModule(shrinkwrap, []);

  return cb(null, results);
};

module.exports = {
  getShrinkwrapDependencies: getShrinkwrapDependencies
};
