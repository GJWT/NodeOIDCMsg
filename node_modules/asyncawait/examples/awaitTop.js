// Copyright (c) 2017 The Authors of 'JWTS for NODE'
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

ï»¿var fs = require('fs');
var Promise = require('bluebird');
var _ = require('lodash');
var async = require('..').async;
var await = require('..').await;


var longCalculation = async (function (seconds, result) {
    await(Promise.delay(seconds * 1000));
    return result;
});


var program = async (function() {
    var randomDelays = _.times(10, function() { return Math.round(40 * Math.random()) / 10; });
    console.log('Operation lengths (secs): ' + JSON.stringify(randomDelays, null, 2));

    var asyncOps = _.map(randomDelays, function(delay) { return longCalculation(delay, delay); });
    var fastest = await.top(3) (asyncOps);
    console.log('Finished fastest: ' + JSON.stringify(fastest, null, 2));
});


console.log('running...');
program().catch(function (err) { console.log('ERROR: ' + err); });
